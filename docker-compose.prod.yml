services:
  db:
    image: postgres:15
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-xfive}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - xfive_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             gunicorn xfive.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./data:/app/data
    expose:
      - 8000
    environment:
      - DEBUG=0
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-xfive}
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=${POSTGRES_DB:-xfive}
      - DATABASE_USER=${POSTGRES_USER:-postgres}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - xfive_network

  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/media
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - xfive_network

networks:
  xfive_network:
    driver: bridge

volumes:
  postgres_prod_data:
  static_volume:
  media_volume: 