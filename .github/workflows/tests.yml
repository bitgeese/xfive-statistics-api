name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
            
      - name: Install dependencies
        run: |
          poetry install --no-root
          
      - name: Lint with Ruff
        run: |
          poetry run ruff check .
          
      - name: Format check with Ruff
        run: |
          poetry run ruff format --check .
          
      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=demographics --cov=visualization
          
      - name: Check coverage threshold
        run: |
          poetry run python -c "import sys; from coverage import Coverage; cov = Coverage(); cov.load(); percentage = cov.report(); print(f'Coverage: {percentage:.2f}%'); sys.exit(1) if percentage < 80 else sys.exit(0)"
